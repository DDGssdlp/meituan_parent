ipAddr: 127.0.0.1
# 配置应用名称 nacos 使用
spring:
  datasource:
    username: root
    password: root
    url: jdbc:mysql://${ipAddr}:3306/meituan-product?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
    driver-class-name: com.mysql.cj.jdbc.Driver
#    sentinel:
#      transport:
#        dashboard: localhost:8333
  # 指定返回时间的格式化
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss

  # sentinel
  cloud:
    sentinel:
      transport:
        dashboard: localhost:8858
        port: 8719
        clientIp: localhost

  redis:
    host: ${ipAddr}
    port: 6379
    lettuce:
      # 在关闭客户端连接之前等待任务处理完成的最长时间，在这之后，无论任务是否执行完成，都会被执行器关闭，默认100ms
      shutdown-timeout: 1000
      pool:
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
    timeout: 50000
    # password: redis123
  #   设置缓存类型
  cache:
    type: redis
#   设置存活时间
    redis:
      time-to-live: 3600000
#      如果指定了前缀就用我们指定的 如果没有就用缓存的名字作为前缀
#      key-prefix: CACHE_
#      是否缓存空值
      cache-null-values: false
#    cache-names:

mybatis-plus:
  configuration:
    # 是否开启自动驼峰命名规则（camel case）映射，
    map-underscore-to-camel-case: true

  mapper-locations: classpath:/mapper/**/*.xml
  global-config:
    db-config:
      id-type: auto
      # 配置全局逻辑删除 0代表未删除 1代表已删除 第二步配置逻辑删除组件 第三步配置逻辑删除的字段 实体类上
      logic-delete-value: 1
      logic-not-delete-value: 0


server:
  port: 14000
logging:
  level:
    com.ddg.meituan: info
    org:
      springframework:
        cloud: error
    com:
      alibaba:
        nacos: error

#    org.springframework.cloud.openfeign: debug
#    org.springframework.cloud.sleuth: debug


#使用的线程池配置
meituan:
  thread:
    core-size: 20
    max-size: 200
    keep-alive-time: 10
    queue-size: 10000
  # 方法返回结果为空 是否是进行缓存 默认false
  rediscache:
    cachenull: false

# swagger 配置
swagger:
  enable: true
  application-name: ${spring.application.name}
  application-version: 1.0
  application-description: springfox swagger 3.0
  try-host: http://localhost:${server.port}

#设置feign客户端超时时间（OpenFeign默认支持ribbon）
feign:
  client:
    config:
      #default 默认所有服务。如果需要更改，直接换成调用方的服务名
      default:
        #指的是建立连接后从服务器读取到可用资源所用的时间
        connect-timeout: 1000
        #指的是建立连接所用的时间，适用于网络状况正常的情况下，两端连接所用的实际
        read-timeout: 2000

  # feign 开启服务的降级和熔断
  hystrix:
    enabled: true